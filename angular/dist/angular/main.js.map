{"version":3,"sources":["./src/app/notfound/notfound.component.ts","./src/app/notfound/notfound.component.html","./src/app/external/external.component.ts","./src/app/external/external.component.html","./src/app/episode/episode.component.ts","./src/app/episode/episode.component.html","./src/environments/environment.ts","./src/app/services/login.service.ts","./src/app/services/api.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/creature/creature.component.ts","./src/app/creature/creature.component.html","./src/app/character/character.component.ts","./src/app/character/character.component.html","./src/app/app.module.ts","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Page not found!</h2>","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-external',\r\n  templateUrl: './external.component.html',\r\n  styleUrls: ['./external.component.css'],\r\n})\r\nexport class ExternalComponent implements OnInit {\r\n  data: any;\r\n\r\n  constructor(private apiSvc: ApiService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  async callApi(category: string, flag: string) {\r\n    this.data = await this.apiSvc.callExternalAPI(category, flag);\r\n  }\r\n}\r\n","<h1 class=\"title is-1\">Joke API</h1>\r\n<h2 class=\"subtitle\">\r\n  Here you can get a joke from an external API.\r\n  <br />\r\n  You can use the first dropdown menu to select which kind of joke you would\r\n  like. <br />\r\n  The second dropdown menu is used for blacklisting certain types of jokes.\r\n</h2>\r\n\r\n<div class=\"field\" style=\"display: inline-block\">\r\n  <div class=\"control\">\r\n    <div class=\"select\">\r\n      <select #category>\r\n        <option value=\"Any\">All types</option>\r\n        <option value=\"Misc\">Miscellaneous</option>\r\n        <option value=\"Programming\">Programming</option>\r\n        <option value=\"Dark\">Dark</option>\r\n        <option value=\"Pun\">Pun</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"field\" style=\"display: inline-block\">\r\n  <div class=\"control\">\r\n    <div class=\"select\">\r\n      <select #flags>\r\n        <option value=\"none\">No flags</option>\r\n        <option value=\"nsfw\">NSFW</option>\r\n        <option value=\"religious\">Religion</option>\r\n        <option value=\"political\">Politics</option>\r\n        <option value=\"racist\">Race</option>\r\n        <option value=\"sexist\">Gender</option>\r\n        <option value=\"explicit\">Explicit</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<button\r\n  class=\"button is-primary\"\r\n  (click)=\"callApi(category.value, flags.value)\"\r\n>\r\n  Get joke\r\n</button>\r\n\r\n<div *ngIf=\"data != null && data.type == 'single'\">\r\n  <p class=\"title is-5\">Joke</p>\r\n  <p>{{ data.joke }}</p>\r\n</div>\r\n\r\n<div *ngIf=\"data != null && data.type == 'twopart'\">\r\n  <p class=\"title is-5\">Setup</p>\r\n  <p>{{ data.setup }}</p>\r\n  <br />\r\n  <p class=\"title is-5\">Punchline</p>\r\n  <p>{{ data.delivery }}</p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\n\n@Component({\n  selector: 'app-episode',\n  templateUrl: './episode.component.html',\n  styleUrls: ['./episode.component.css'],\n})\nexport class EpisodeComponent implements OnInit {\n  categoryName : string = \"episodes\";\n  data: any;\n\n  constructor(private apiSvc: ApiService) {}\n\n  ngOnInit(): void {}\n\n  async callApi() {\n    this.data = await this.apiSvc.getAll(true, this.categoryName);\n  }\n}\n","<h1 class=\"title\">Episodes Overview</h1>\n<h2 class=\"subtitle\">\n  Here you can look up information about the episodes that aired.\n</h2>\n\n<button class=\"button\" (click)=\"callApi()\">Get Episodes</button>\n\n<table class=\"table is-striped\" *ngIf=\"data != null && data.length > 0\">\n  <thead>\n    <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Airdate</th>\n      <th>Description</th>\n      <th>Book</th>\n      <th>Number</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let episode of data\">\n      <td>{{ episode.id }}</td>\n      <td>{{ episode.title }}</td>\n      <td>{{ episode.airDate }}</td>\n      <td>{{ episode.description }}</td>\n      <td>{{ episode.book }}</td>\n      <td>{{ episode.episodeNumber }}</td>\n    </tr>\n  </tbody>\n</table>\n\n<br /><br />\n<!-- <input type=\"text\"><button (click)=\"callApi('creature/1')\">GetByID</button>\n<p>{{data}}</p> -->\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  jwtToken : string;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n}\r\n","import {\r\n  HttpClient,\r\n  HttpErrorResponse,\r\n  HttpHeaders,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { LoginService } from '../services/login.service';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApiService {\r\n  // deploy_url: string = 'http://localhost:58932/api/v1/';\r\n  deploy_url: string = 'https://cloudapi-avatar.appspot.com/api/v1/';\r\n  external_url: string = 'https://v2.jokeapi.dev/joke/';\r\n\r\n  constructor(private http: HttpClient, private loginSvc: LoginService) {}\r\n\r\n  // Read\r\n  getAll(all: boolean, category: string) {\r\n    if (all) {\r\n      return this.http\r\n        .get<any>(this.deploy_url + category + '?length=99')\r\n        .toPromise()\r\n        .catch((err: HttpErrorResponse) => {\r\n          if (err.status == 0) {\r\n            Swal.fire(\r\n              'No connection',\r\n              'There is no connection with the backend. The API seems to be down... Try again later.',\r\n              'error'\r\n            );\r\n          } else {\r\n            Swal.fire('Error', 'An error occured', 'error');\r\n          }\r\n        });\r\n    }\r\n    if (category == 'characters') {\r\n      return this.http\r\n        .get<any[]>(this.deploy_url + 'characters/dto')\r\n        .toPromise();\r\n    }\r\n    return this.http.get<any[]>(this.deploy_url + category).toPromise();\r\n  }\r\n\r\n  getById(id: number, category: string) {\r\n    return this.http\r\n      .get<any>(this.deploy_url + category + '/' + id)\r\n      .toPromise()\r\n      .catch((err: HttpErrorResponse) => {\r\n        if (err.status == 404) {\r\n          Swal.fire('Not found', err.error, 'error');\r\n        } else if (err.status == 0) {\r\n          Swal.fire(\r\n            'No connection',\r\n            'There is no connection with the backend. The API seems to be down... Try again later.',\r\n            'error'\r\n          );\r\n        } else {\r\n          Swal.fire('Error', 'An error occured', 'error');\r\n        }\r\n      });\r\n  }\r\n\r\n  getByName(name: string, category: string) {\r\n    return this.http\r\n      .get<any>(this.deploy_url + category + '/?name=' + name)\r\n      .toPromise()\r\n      .catch((err: HttpErrorResponse) => {\r\n        if (err.status == 404) {\r\n          Swal.fire('Not found', err.error, 'error');\r\n        } else if (err.status == 0) {\r\n          Swal.fire(\r\n            'No connection',\r\n            'There is no connection with the backend. The API seems to be down... Try again later.',\r\n            'error'\r\n          );\r\n        } else {\r\n          Swal.fire('Error', 'An error occured', 'error');\r\n        }\r\n      });\r\n  }\r\n\r\n  getAllWithSort(page: number, sort: string, dir: string, category: string) {\r\n    return this.http\r\n      .get<any>(\r\n        this.deploy_url +\r\n          category +\r\n          '?page=' +\r\n          page +\r\n          '&sort=' +\r\n          sort +\r\n          '&dir=' +\r\n          dir\r\n      )\r\n      .toPromise()\r\n      .catch((err: HttpErrorResponse) => {\r\n        if (err.status == 0) {\r\n          Swal.fire(\r\n            'No connection',\r\n            'There is no connection with the backend. The API seems to be down... Try again later.',\r\n            'error'\r\n          );\r\n        } else {\r\n          Swal.fire('Error', 'An error occured', 'error');\r\n          //console.log(err)\r\n        }\r\n      });\r\n  }\r\n\r\n  getRelation(id: number, relation: string, category: string) {\r\n    return this.http\r\n      .get<any>(this.deploy_url + category + '/ ' + id + '/' + relation)\r\n      .toPromise()\r\n      .catch((err: HttpErrorResponse) => {\r\n        if (err.status == 404) {\r\n          Swal.fire(\r\n            'Not found',\r\n            \"The data you are trying to look up doesn't exist.\",\r\n            'error'\r\n          );\r\n        } else if (err.status == 0) {\r\n          Swal.fire(\r\n            'No connection',\r\n            'There is no connection with the backend. The API seems to be down... Try again later.',\r\n            'error'\r\n          );\r\n        } else {\r\n          Swal.fire('Error', 'An error occured', 'error');\r\n        }\r\n      });\r\n  }\r\n\r\n  // Create\r\n  createObject(body: ICharacter | ICreature, category: string) {\r\n    return this.http\r\n      .post<any>(this.deploy_url + category + '/', body)\r\n      .toPromise()\r\n      .catch((err: HttpErrorResponse) => {\r\n        if (err.status == 400) {\r\n          Swal.fire(\r\n            'Bad request',\r\n            err.error.title + this.formatErrors(err.error.errors),\r\n            'warning'\r\n          );\r\n        } else if (err.status == 404) {\r\n          Swal.fire('Not found', err.error, 'error');\r\n        } else if (err.status == 0) {\r\n          Swal.fire(\r\n            'No connection',\r\n            'There is no connection with the backend. The API seems to be down... Try again later.',\r\n            'error'\r\n          );\r\n        } else {\r\n          Swal.fire('Error', 'An error occured. Try again later.', 'error');\r\n        }\r\n      });\r\n  }\r\n\r\n  // Delete\r\n  deleteObject(id: number, category: string) {\r\n    let httpHeader = {\r\n      headers: new HttpHeaders({\r\n        Authorization: 'Bearer ' + this.loginSvc.jwtToken,\r\n      }),\r\n    };\r\n    return this.http\r\n      .delete<any>(this.deploy_url + category + '/' + id, httpHeader)\r\n      .toPromise()\r\n      .catch((err: HttpErrorResponse) => {\r\n        if (err.status == 401) {\r\n          Swal.fire(\r\n            'Unauthorized',\r\n            'You are not logged in. Please go the login page in order to access this data.',\r\n            'error'\r\n          );\r\n        } else if (err.status == 400) {\r\n          Swal.fire(\r\n            'Bad request',\r\n            err.error.title + this.formatErrors(err.error.errors),\r\n            'warning'\r\n          );\r\n        } else if (err.status == 404) {\r\n          Swal.fire('Not found', err.error, 'error');\r\n        } else if (err.status == 0) {\r\n          Swal.fire(\r\n            'No connection',\r\n            'There is no connection with the backend. The API seems to be down... Try again later.',\r\n            'error'\r\n          );\r\n        } else {\r\n          Swal.fire('Error', 'An error occured. Try again later.', 'error');\r\n        }\r\n      });\r\n  }\r\n\r\n  // Update\r\n  updateObject(body: ICharacter | ICreature, category: string) {\r\n    let httpHeader = {\r\n      headers: new HttpHeaders({\r\n        Authorization: 'Bearer ' + this.loginSvc.jwtToken,\r\n      }),\r\n    };\r\n    return this.http\r\n      .put<ICharacter>(this.deploy_url + category, body, httpHeader)\r\n      .toPromise()\r\n      .catch((err: HttpErrorResponse) => {\r\n        if (err.status == 401) {\r\n          Swal.fire(\r\n            'Unauthorized',\r\n            'You are not logged in. Please go the login page in order to access this data.',\r\n            'error'\r\n          );\r\n        } else if (err.status == 400) {\r\n          Swal.fire(\r\n            'Bad request',\r\n            err.error.title + this.formatErrors(err.error.errors),\r\n            'warning'\r\n          );\r\n        } else if (err.status == 404) {\r\n          Swal.fire('Not found', err.error, 'error');\r\n        } else if (err.status == 0) {\r\n          Swal.fire(\r\n            'No connection',\r\n            'There is no connection with the backend. The API seems to be down... Try again later.',\r\n            'error'\r\n          );\r\n        } else {\r\n          Swal.fire('Error', 'An error occured', 'error');\r\n        }\r\n      });\r\n  }\r\n\r\n  formatErrors(errorList: any) {\r\n    let validationErrorMessage = ' ';\r\n    if (errorList.Name != null) validationErrorMessage += errorList.Name + ' ';\r\n    if (errorList.VoiceActorID != null)\r\n      validationErrorMessage += errorList.VoiceActorID + ' ';\r\n    if (errorList.AbilityID != null)\r\n      validationErrorMessage += errorList.AbilityID + ' ';\r\n    if (errorList.AffiliationID != null)\r\n      validationErrorMessage += errorList.AffiliationID + ' ';\r\n    if (errorList.SpeciesID != null)\r\n      validationErrorMessage += errorList.SpeciesID + ' ';\r\n    return validationErrorMessage;\r\n  }\r\n\r\n  // CHARACTER CALLS - NOT USED ANYMORE!!\r\n  // Read\r\n  // getAllCharacters(all: boolean) {\r\n  //   if (all) {\r\n  //     return this.http\r\n  //       .get<ICharacter[]>(this.url + 'characters?length=99')\r\n  //       .toPromise()\r\n  //       .catch((err: HttpErrorResponse) => {\r\n  //         if (err.status == 0) {\r\n  //           Swal.fire(\r\n  //             'No connection',\r\n  //             'There is no connection with the backend. The API seems to be down... Try again later.',\r\n  //             'error'\r\n  //           );\r\n  //         }\r\n  //       });\r\n  //   }\r\n  //   return this.http.get<ICharacter[]>(this.url + 'characters/dto').toPromise();\r\n  // }\r\n\r\n  // getCharacterById(id: number) {\r\n  //   return this.http\r\n  //     .get<ICharacter>(this.url + 'characters/' + id)\r\n  //     .toPromise()\r\n  //     .catch((err: HttpErrorResponse) => {\r\n  //       if (err.status == 404) {\r\n  //         Swal.fire(\r\n  //           'Not found',\r\n  //           \"The data you are trying to look up doesn't exist.\",\r\n  //           'error'\r\n  //         );\r\n  //       } else if (err.status == 0) {\r\n  //         Swal.fire(\r\n  //           'No connection',\r\n  //           'There is no connection with the backend. The API seems to be down... Try again later.',\r\n  //           'error'\r\n  //         );\r\n  //       } else {\r\n  //         Swal.fire('Error', 'An error occured', 'error');\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // getAllCharactersWithSort(page: number, sort: string, dir: string) {\r\n  //   return this.http\r\n  //     .get<any>(\r\n  //       this.url + 'characters?page=' + page + '&sort=' + sort + '&dir=' + dir\r\n  //     )\r\n  //     .toPromise();\r\n  // }\r\n\r\n  // getRelationForCharacter(id, relation: string) {\r\n  //   return this.http\r\n  //     .get<any>(this.url + 'characters/ ' + id + '/' + relation)\r\n  //     .toPromise()\r\n  //     .catch((error: HttpErrorResponse) => {\r\n  //       Swal.fire(\r\n  //         'Not found',\r\n  //         \"The data you are trying to look up doesn't exist.\",\r\n  //         'error'\r\n  //       );\r\n  //     });\r\n  // }\r\n\r\n  // // Create\r\n  // createCharacter(body: ICharacter) {\r\n  //   return this.http\r\n  //     .post<any>(this.url + 'characters/', body)\r\n  //     .toPromise()\r\n  //     .catch((err: HttpErrorResponse) => {\r\n  //       if (err.status == 400) {\r\n  //         Swal.fire(\r\n  //           'Bad request',\r\n  //           err.error.title +\r\n  //             ' Make sure that all the required fields are filled in.',\r\n  //           'warning'\r\n  //         );\r\n  //       } else if (err.status == 404) {\r\n  //         Swal.fire('Not found', err.error, 'error');\r\n  //       } else {\r\n  //         Swal.fire('Error', 'An error occured. Try again later.', 'error');\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // // Delete\r\n  // deleteCharacter(id: number) {\r\n  //   let httpHeader = {\r\n  //     headers: new HttpHeaders({\r\n  //       Authorization: 'Bearer ' + this.loginSvc.jwtToken,\r\n  //     }),\r\n  //   };\r\n  //   return this.http\r\n  //     .delete<any>(this.url + 'characters/' + id, httpHeader)\r\n  //     .toPromise()\r\n  //     .catch((err: HttpErrorResponse) => {\r\n  //       if (err.status == 401) {\r\n  //         Swal.fire(\r\n  //           'Unauthorized',\r\n  //           'You are not logged in. Please go the login page in order to access this data.',\r\n  //           'error'\r\n  //         );\r\n  //       } else if (err.status == 404) {\r\n  //         Swal.fire('Not found', err.error, 'error');\r\n  //       } else {\r\n  //         Swal.fire(\r\n  //           'Not found',\r\n  //           \"The data you are trying to delete doesn't exist.\",\r\n  //           'error'\r\n  //         );\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // // Update\r\n  // updateCharacter(body: ICharacter) {\r\n  //   let httpHeader = {\r\n  //     headers: new HttpHeaders({\r\n  //       Authorization: 'Bearer ' + this.loginSvc.jwtToken,\r\n  //     }),\r\n  //   };\r\n  //   return this.http\r\n  //     .put<ICharacter>(this.url + 'characters', body, httpHeader)\r\n  //     .toPromise()\r\n  //     .catch((err: HttpErrorResponse) => {\r\n  //       if (err.status == 401) {\r\n  //         Swal.fire(\r\n  //           'Unauthorized',\r\n  //           'You are not logged in. Please go the login page in order to access this data.',\r\n  //           'error'\r\n  //         );\r\n  //       } else if (err.status == 400) {\r\n  //         Swal.fire(\r\n  //           'Bad request',\r\n  //           err.error.title +\r\n  //             ' Make sure that all the required fields are filled in.',\r\n  //           'warning'\r\n  //         );\r\n  //         console.log(err);\r\n  //       } else if (err.status == 404) {\r\n  //         Swal.fire('Not found', err.error, 'error');\r\n  //       } else {\r\n  //         Swal.fire('Error', 'An error occured', 'error');\r\n  //       }\r\n  //     });\r\n  // }\r\n\r\n  // External API\r\n\r\n  callExternalAPI(category: string, flag: string) {\r\n    return this.http\r\n      .get<IJoke>(this.external_url + category + '/blacklistFlags=' + flag)\r\n      .toPromise();\r\n  }\r\n\r\n  delay(ms: number) {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n}\r\n\r\n// Interfaces for external API\r\nexport interface IJoke {\r\n  error: boolean;\r\n  category: string;\r\n  type: string;\r\n  setup: string;\r\n  delivery: string;\r\n  flags: IFlags;\r\n  id: number;\r\n  safe: boolean;\r\n  lang: string;\r\n}\r\n\r\nexport interface IFlags {\r\n  nsfw: boolean;\r\n  religious: boolean;\r\n  political: boolean;\r\n  racist: boolean;\r\n  sexist: boolean;\r\n  explicit: boolean;\r\n}\r\n\r\n// INTERFACES\r\nexport interface ICharacter {\r\n  id: number;\r\n  name: string;\r\n  appearsInEpisode?: any;\r\n  isBender: boolean;\r\n  isAvatar: boolean;\r\n  ability: ISkill;\r\n  abilityID: number;\r\n  affiliationID: number;\r\n  voicedBy: IVoiceActor;\r\n  voiceActorID: number;\r\n}\r\n\r\nexport interface IEpisode {\r\n  id: number;\r\n  title: string;\r\n  book: number;\r\n  description: string;\r\n  airDate: Date;\r\n  appearingCharacters?: any;\r\n  appearingCreatures?: any;\r\n  episodeNumber: number;\r\n  overallNumber: number;\r\n}\r\n\r\nexport interface ICreature {\r\n  id: number;\r\n  name: string;\r\n  appearsInEpisode: IEpisode[];\r\n  species: ISpecies;\r\n  speciesID: number;\r\n  affiliation: IOrganisation;\r\n  affiliationID: number;\r\n}\r\n\r\nexport interface ISkill {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n}\r\n\r\nexport interface IOrganisation {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  emblem?: any;\r\n  members?: any;\r\n}\r\n\r\nexport interface ILocation {\r\n  id: number;\r\n  name: string;\r\n  importantPlace: string;\r\n  description: string;\r\n  inhabitingSpecies?: any;\r\n}\r\n\r\nexport interface IHabitat {\r\n  id: number;\r\n  name: string;\r\n  importantPlace: string;\r\n  description: string;\r\n  inhabitingSpecies: ISpecies[];\r\n}\r\n\r\nexport interface ISpecies {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  image: string;\r\n  habitat: IHabitat;\r\n  habitatId: number;\r\n}\r\n\r\nexport interface IVoiceActor {\r\n  id: number;\r\n  name: string;\r\n  birthDate: Date;\r\n  deathDate: Date;\r\n  link: string;\r\n}\r\n\r\n// CLASSES\r\nexport class Character implements ICharacter {\r\n  id: number;\r\n  name: string;\r\n  appearsInEpisode?: any;\r\n  isBender: boolean;\r\n  isAvatar: boolean;\r\n  ability: ISkill;\r\n  abilityID: number;\r\n  affiliationID: number;\r\n  voicedBy: IVoiceActor;\r\n  voiceActorID: number;\r\n\r\n  constructor(\r\n    name: string,\r\n    isBender: boolean,\r\n    isAvatar: boolean,\r\n    abilityID: number,\r\n    affiliationID: number,\r\n    voiceActorId: number,\r\n    episodes?: any[],\r\n    id?: number\r\n  ) {\r\n    if (id) this.id = id;\r\n    if (episodes) this.appearsInEpisode = episodes;\r\n    this.name = name;\r\n    this.isBender = isBender;\r\n    this.isAvatar = isAvatar;\r\n    this.abilityID = abilityID;\r\n    this.affiliationID = affiliationID;\r\n    this.voiceActorID = voiceActorId;\r\n  }\r\n}\r\n\r\nexport class Creature implements ICreature {\r\n  id: number;\r\n  name: string;\r\n  appearsInEpisode: IEpisode[];\r\n  species: ISpecies;\r\n  speciesID: number;\r\n  affiliation: IOrganisation;\r\n  affiliationID: number;\r\n\r\n  constructor(\r\n    name: string,\r\n    speciesID: number,\r\n    affiliationID: number,\r\n    episodes?: any[],\r\n    id?: number\r\n  ) {\r\n    if (id) this.id = id;\r\n    if (episodes) this.appearsInEpisode = episodes;\r\n    this.name = name;\r\n    this.speciesID = speciesID;\r\n    this.affiliationID = affiliationID;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular';\n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n  ApiService,\r\n  ICreature,\r\n  ISpecies,\r\n  IOrganisation,\r\n  Creature,\r\n  IEpisode,\r\n} from '../services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-creature',\r\n  templateUrl: './creature.component.html',\r\n  styleUrls: ['./creature.component.css'],\r\n})\r\nexport class CreatureComponent implements OnInit {\r\n  categoryName: string = 'creatures';\r\n  data: any;\r\n\r\n  creatureList: ICreature[] | void;\r\n  creature: ICreature | void;\r\n  queryCreature: ICreature | void;\r\n\r\n  showCreaturesButtonText: string = 'Show table';\r\n  showCreatures: boolean = false;\r\n\r\n  currentPage: number = 0;\r\n  maxPage: number;\r\n\r\n  species: ISpecies;\r\n  showSpecies: boolean = false;\r\n  speciesButtonText: string = 'Show species';\r\n\r\n  organisation: IOrganisation;\r\n  showOrganisation: boolean = false;\r\n  organisationButtonText: string = 'Show affiliation';\r\n\r\n  episodes: IEpisode[];\r\n  showEpisodes: boolean = false;\r\n  episodesButtonText: string = 'Show episodes';\r\n\r\n  constructor(private apiSvc: ApiService) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let data = await this.apiSvc.getAll(true, this.categoryName);\r\n    if (data) {\r\n      this.maxPage = Math.ceil(data.length / 4);\r\n    }\r\n  }\r\n\r\n  switchPage(next: boolean, sort: string, dir: string) {\r\n    if (next) {\r\n      if (this.currentPage < this.maxPage - 1) {\r\n        this.currentPage++;\r\n      }\r\n    } else {\r\n      if (this.currentPage > 0) {\r\n        this.currentPage--;\r\n      }\r\n    }\r\n    this.callApiForSort(sort, dir);\r\n  }\r\n\r\n  reset() {\r\n    this.species = null;\r\n    this.showSpecies = false;\r\n    this.speciesButtonText = 'Show species';\r\n\r\n    this.organisation = null;\r\n    this.showOrganisation = false;\r\n    this.organisationButtonText = 'Show organisation';\r\n\r\n    this.episodes = null;\r\n    this.showEpisodes = false;\r\n    this.episodesButtonText = 'Show episodes';\r\n  }\r\n\r\n  resetQuery() {\r\n    this.queryCreature = null;\r\n  }\r\n\r\n  refactorEpisodeList(list: string) {\r\n    let nospace = list.replace(/\\s/g, '');\r\n    let splitted = nospace.split(',');\r\n    let objectArray = [];\r\n    splitted.forEach((id) => {\r\n      let obj = {\r\n        id: +id,\r\n      };\r\n      objectArray.push(obj);\r\n    });\r\n    return objectArray;\r\n    //console.log(objectArray);\r\n  }\r\n\r\n  async callApiForAll() {\r\n    if (this.showCreatures) {\r\n      this.showCreaturesButtonText = 'Show table';\r\n      this.showCreatures = false;\r\n      this.creatureList = null;\r\n    } else {\r\n      this.showCreaturesButtonText = 'Hide table';\r\n      this.showCreatures = true;\r\n      this.creatureList = await this.apiSvc.getAll(false, this.categoryName);\r\n    }\r\n  }\r\n\r\n  async callApiForSort(sort: string, dir: string) {\r\n    this.creatureList = await this.apiSvc.getAllWithSort(\r\n      this.currentPage,\r\n      sort,\r\n      dir,\r\n      this.categoryName\r\n    );\r\n  }\r\n\r\n  async callApiForQuery(name: string) {\r\n    this.resetQuery();\r\n    let res = await this.apiSvc.getByName(name, this.categoryName);\r\n    if (res) this.queryCreature = res[0];\r\n  }\r\n\r\n  async callApiForId(id: number) {\r\n    this.creature = await this.apiSvc.getById(id, this.categoryName);\r\n    this.reset();\r\n  }\r\n\r\n  async callApiForOrganisation(id: number) {\r\n    if (this.showOrganisation) {\r\n      this.organisationButtonText = 'Show affiliation';\r\n      this.showOrganisation = false;\r\n      this.organisation = null;\r\n    } else {\r\n      this.organisationButtonText = 'Hide affiliation';\r\n      this.showOrganisation = true;\r\n      this.organisation = await this.apiSvc.getRelation(\r\n        id,\r\n        'organisation',\r\n        this.categoryName\r\n      );\r\n    }\r\n  }\r\n\r\n  async callApiForSpecies(id: number) {\r\n    if (this.showSpecies) {\r\n      this.speciesButtonText = 'Show species';\r\n      this.showSpecies = false;\r\n      this.species = null;\r\n    } else {\r\n      this.speciesButtonText = 'Hide species';\r\n      this.showSpecies = true;\r\n      this.species = await this.apiSvc.getRelation(\r\n        id,\r\n        'species',\r\n        this.categoryName\r\n      );\r\n    }\r\n  }\r\n\r\n  async callApiForEpisodes(id: number) {\r\n    if (this.episodes) {\r\n      this.episodesButtonText = 'Show episodes';\r\n      this.showEpisodes = false;\r\n      this.episodes = null;\r\n    } else {\r\n      this.episodesButtonText = 'Hide episodes';\r\n      this.showEpisodes = true;\r\n      this.episodes = await this.apiSvc.getRelation(\r\n        id,\r\n        'episodes',\r\n        this.categoryName\r\n      );\r\n    }\r\n  }\r\n\r\n  async callApiForNewCreature(\r\n    name: string,\r\n    speciesId: number,\r\n    organisationId: number,\r\n    appearsInEpisode: string\r\n  ) {\r\n    let episodes = [];\r\n    if (appearsInEpisode != '') {\r\n      episodes = this.refactorEpisodeList(appearsInEpisode);\r\n    }\r\n\r\n    let newCreature = new Creature(name, speciesId, organisationId, episodes);\r\n    let res = await this.apiSvc.createObject(newCreature, this.categoryName);\r\n    if (res) {\r\n      Swal.fire(\r\n        'Succes',\r\n        'Added new character named \"' + res.name + '\" to the database.',\r\n        'success'\r\n      );\r\n    }\r\n\r\n    // refresh list of data\r\n    this.ngOnInit();\r\n  }\r\n\r\n  async callApiForDelete(id: number) {\r\n    let res = this.apiSvc.deleteObject(id, this.categoryName);\r\n    if (res) {\r\n      Swal.fire(\r\n        'Succes',\r\n        'Deleted character with ID ' + id + ' from the database.',\r\n        'success'\r\n      );\r\n    }\r\n\r\n    // refresh list of data\r\n    this.ngOnInit();\r\n  }\r\n\r\n  async callApiForUpdate(\r\n    name: string,\r\n    speciesId: number,\r\n    organisationId: number,\r\n    id: number,\r\n    appearsInEpisode: string\r\n  ) {\r\n    let episodes = this.refactorEpisodeList(appearsInEpisode);\r\n    // FIXME: geeft nog error in API, kan niet saven\r\n    //console.log(episodes);\r\n    let updatedCreature = new Creature(\r\n      name,\r\n      speciesId,\r\n      organisationId,\r\n      episodes,\r\n      id\r\n    );\r\n    let res = this.apiSvc.updateObject(updatedCreature, this.categoryName);\r\n    if (res) {\r\n      Swal.fire('Succes', 'Updated character with ID ' + id + '.', 'success');\r\n    }\r\n  }\r\n}\r\n","<h1 class=\"title is-1\">Creatures Overview</h1>\n<h2 class=\"subtitle\">\n  Read, create, delete or update creatures from the Avatar universe!\n</h2>\n<br />\n\n<!-- List all creatures -->\n<h3 class=\"title\">Look up all creatures</h3>\n<p class=\"subtitle\">\n  Using the button, you can get an overview of all the characters. There will\n  appear more buttons in order to sort the data.\n</p>\n<button class=\"button is-primary\" (click)=\"callApiForAll()\">\n  {{ showCreaturesButtonText }}\n</button>\n<br />\n\n<table class=\"table is-striped\" *ngIf=\"creatureList\">\n  <thead>\n    <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Species</th>\n      <th>Affiliation</th>\n      <th>Species image</th>\n      <th>Species description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let creature of creatureList\">\n      <td>{{ creature.id }}</td>\n      <td>{{ creature.name }}</td>\n      <td>{{ creature.species.name }}</td>\n      <td>{{ creature.affiliation.name }}</td>\n      <td>\n        <img\n          src=\"{{ creature.species.image }}\"\n          alt=\"Species image\"\n          width=\"200\"\n        />\n      </td>\n      <td>{{ creature.species.description }}</td>\n    </tr>\n  </tbody>\n</table>\n<div *ngIf=\"creatureList\">\n  <p>\n    With these buttons you can navigate between pages of data.\n    <strong>Current page: </strong>{{ currentPage + 1 }}/{{ maxPage }}\n  </p>\n  <button\n    class=\"button is-light\"\n    (click)=\"switchPage(false, sort.value, dir.value)\"\n  >\n    << Previous page\n  </button>\n  <button\n    class=\"button is-light\"\n    (click)=\"switchPage(true, sort.value, dir.value)\"\n  >\n    Next page >>\n  </button>\n  <br /><br />\n  <p>With this choice field you can sort the data.</p>\n  <div class=\"select\">\n    <select #sort>\n      <option value=\"id\">Id</option>\n      <option value=\"name\">Name</option>\n      <option value=\"species\">Species name</option>\n    </select>\n  </div>\n  <div class=\"select\">\n    <select #dir>\n      <option value=\"asc\">Ascending</option>\n      <option value=\"des\">Descending</option>\n    </select>\n  </div>\n  <button\n    class=\"button is-light\"\n    (click)=\"callApiForSort(sort.value, dir.value)\"\n  >\n    Sort\n  </button>\n</div>\n<br />\n\n<h3 class=\"title\">Look up more information for a specific creature</h3>\n<!-- Get by name -->\n<p class=\"subtitle\">\n  Here you can search a creature by its name in order to get its ID. With the\n  ID, you can look up more detailed information.\n</p>\n<div class=\"field has-addons\">\n  <div class=\"control\">\n    <input\n      #nameQuery\n      class=\"input\"\n      type=\"text\"\n      placeholder=\"Give a valid name\"\n    />\n  </div>\n  <div class=\"control\">\n    <a class=\"button is-primary\" (click)=\"callApiForQuery(nameQuery.value)\">\n      Search\n    </a>\n  </div>\n</div>\n\n<table class=\"table is-bordered is-striped\" *ngIf=\"queryCreature\">\n  <thead>\n    <tr>\n      <th>Id</th>\n      <th>Name</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>{{ queryCreature.id }}</td>\n      <td>{{ queryCreature.name }}</td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- Get by ID -->\n<p class=\"subtitle\">\n  Here you can search a creature by its ID to get more information and also look\n  up its relations.\n</p>\n\n<div class=\"field has-addons\">\n  <div class=\"control\">\n    <input #id class=\"input\" type=\"number\" placeholder=\"Give a valid ID\" />\n  </div>\n  <div class=\"control\">\n    <a class=\"button is-primary\" (click)=\"callApiForId(id.value)\"> Search </a>\n  </div>\n</div>\n\n<table class=\"table is-bordered is-striped\" *ngIf=\"creature\">\n  <thead>\n    <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Species</th>\n      <th>Affiliation</th>\n      <th>Appears in episodes</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>{{ creature.id }}</td>\n      <td>{{ creature.name }}</td>\n      <td>{{ creature.species.name }}</td>\n      <td>{{ creature.affiliation.name }}</td>\n      <table class=\"table\" *ngIf=\"creature.appearsInEpisode.length > 0\">\n        <thead>\n          <th>Title</th>\n          <th>Airdate</th>\n          <th>Number</th>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let episode of creature.appearsInEpisode\">\n            <td>{{ episode.title }}</td>\n            <td>{{ episode.airDate }}</td>\n            <td>{{ episode.overallNumber }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </tr>\n  </tbody>\n</table>\n\n<!-- Relation 1: species -->\n<button\n  class=\"button is-light\"\n  *ngIf=\"creature\"\n  (click)=\"callApiForSpecies(id.value)\"\n>\n  {{ speciesButtonText }}\n</button>\n<br *ngIf=\"creature\" />\n<table class=\"table is-bordered is-striped\" *ngIf=\"species\">\n  <thead>\n    <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Description</th>\n      <th>Image</th>\n      <th>Habitat name</th>\n      <th>Habitat description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>{{ species.id }}</td>\n      <td>{{ species.name }}</td>\n      <td>{{ species.description }}</td>\n      <td>\n        <img src=\"{{ species.image }}\" alt=\"species image\" width=\"200\" />\n      </td>\n      <td>{{ species.habitat.name }}</td>\n      <td>{{ species.habitat.description }}</td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- Relation 2: affiliation -->\n<button\n  class=\"button is-light\"\n  *ngIf=\"creature\"\n  (click)=\"callApiForOrganisation(id.value)\"\n>\n  {{ organisationButtonText }}\n</button>\n<br *ngIf=\"creature\" />\n<table class=\"table is-bordered is-striped\" *ngIf=\"organisation\">\n  <thead>\n    <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Description</th>\n      <th>Emblem</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>{{ organisation.id }}</td>\n      <td>{{ organisation.name }}</td>\n      <td>{{ organisation.description }}</td>\n      <td>\n        <img src=\"{{ organisation.emblem }}\" alt=\"emblem image\" width=\"200\" />\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- Relation 3: episodes -->\n<button\n  class=\"button is-light\"\n  *ngIf=\"creature\"\n  (click)=\"callApiForEpisodes(id.value)\"\n>\n  {{ episodesButtonText }}\n</button>\n<br *ngIf=\"creature\" />\n<table class=\"table is-bordered is-striped\" *ngIf=\"episodes\">\n  <thead>\n    <tr>\n      <th>Id</th>\n      <th>Title</th>\n      <th>Airdate</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let episode of episodes\">\n      <td>{{ episode.id }}</td>\n      <td>{{ episode.title }}</td>\n      <td>{{ episode.airDate }}</td>\n      <td>{{ episode.description }}</td>\n    </tr>\n  </tbody>\n</table>\n<br />\n\n<!-- CRUD -->\n<!-- Create new creature -->\n<h3 class=\"title\">Add new creature</h3>\n<p class=\"subtitle\">Here you can add a new creature to the database.</p>\n\n<div class=\"field\">\n  <label class=\"label\">Name</label>\n  <div class=\"control\" style=\"width: 25%\">\n    <input #name class=\"input\" type=\"text\" placeholder=\"Give a name\" />\n  </div>\n  <p class=\"help\">This is a required field</p>\n</div>\n\n<div class=\"field\">\n  <label class=\"label\">Species</label>\n  <div class=\"control\" style=\"width: 25%\">\n    <input\n      #speciesId\n      class=\"input\"\n      type=\"number\"\n      placeholder=\"Give the ID of the species\"\n    />\n  </div>\n  <p class=\"help\">This is a required field</p>\n</div>\n\n<div class=\"field\">\n  <label class=\"label\">Affiliation</label>\n  <div class=\"control\" style=\"width: 25%\">\n    <input\n      #affiliationId\n      class=\"input\"\n      type=\"number\"\n      placeholder=\"Give the ID of the affiliation\"\n    />\n  </div>\n  <p class=\"help\">This is a required field</p>\n</div>\n\n<div class=\"field\">\n  <label class=\"label\">Appears in episodes</label>\n  <div class=\"control\" style=\"width: 25%\">\n    <input\n      #episodeList\n      class=\"input\"\n      type=\"string\"\n      placeholder=\"Give the ID of the episodes, seperated by commas\"\n    />\n  </div>\n  <p class=\"help\">Example: 1,2,4</p>\n</div>\n\n<button\n  class=\"button is-primary\"\n  (click)=\"\n    callApiForNewCreature(\n      name.value,\n      speciesId.value,\n      affiliationId.value,\n      episodeList.value\n    )\n  \"\n>\n  Add new creature\n</button>\n<br /><br /><br />\n\n<!-- Delete creature -->\n<h3 class=\"title\">Delete creatures</h3>\n<p class=\"subtitle\">\n  Here you can delete creatures from the database. Be careful! If you delete\n  data, it will be lost forever. To use this feature, you must be\n  <a href=\"http://localhost:4200/login\">logged in</a>.\n</p>\n\n<div class=\"field has-addons\">\n  <div class=\"control\">\n    <input\n      #idToDelete\n      class=\"input\"\n      type=\"number\"\n      placeholder=\"Give a valid ID\"\n    />\n  </div>\n  <div class=\"control\">\n    <a class=\"button is-danger\" (click)=\"callApiForDelete(idToDelete.value)\">\n      Delete\n    </a>\n  </div>\n</div>\n<br />\n\n<!-- Update creature -->\n<h3 class=\"title\">Update existing creatures</h3>\n<p class=\"subtitle\">\n  Here you can update existing creatures with new values. You need to know the\n  ID of the creature you want to update. To use this feature, you must be\n  <a href=\"http://localhost:4200/login\">logged in</a>.\n</p>\n\n<div class=\"field\">\n  <label class=\"label\">ID</label>\n  <div class=\"control\" style=\"width: 25%\">\n    <input #updateId class=\"input\" type=\"number\" placeholder=\"Give an ID\" />\n  </div>\n  <p class=\"help\">This is a required field</p>\n</div>\n\n<div class=\"field\">\n  <label class=\"label\">Name</label>\n  <div class=\"control\" style=\"width: 25%\">\n    <input #updateName class=\"input\" type=\"text\" placeholder=\"Give a name\" />\n  </div>\n  <p class=\"help\">This is a required field</p>\n</div>\n\n<div class=\"field\">\n  <label class=\"label\">Species</label>\n  <div class=\"control\" style=\"width: 25%\">\n    <input\n      #updateSpeciesId\n      class=\"input\"\n      type=\"number\"\n      placeholder=\"Give the ID of the species\"\n    />\n  </div>\n  <p class=\"help\">This is a required field</p>\n</div>\n\n<div class=\"field\">\n  <label class=\"label\">Affiliation</label>\n  <div class=\"control\" style=\"width: 25%\">\n    <input\n      #updateAffiliationId\n      class=\"input\"\n      type=\"number\"\n      placeholder=\"Give the ID of the affiliation\"\n    />\n  </div>\n  <p class=\"help\">This is a required field</p>\n</div>\n\n<div class=\"field\">\n  <label class=\"label\">Appears in episodes</label>\n  <div class=\"control\" style=\"width: 25%\">\n    <input\n      #updateEpisodeList\n      class=\"input\"\n      type=\"string\"\n      placeholder=\"Give the ID of the episodes, seperated by commas\"\n    />\n  </div>\n  <p class=\"help\">Example: 1,2,4</p>\n</div>\n\n<button\n  class=\"button is-primary\"\n  (click)=\"\n    callApiForUpdate(\n      updateName.value,\n      updateSpeciesId.value,\n      updateAffiliationId.value,\n      updateId.value,\n      updateEpisodeList.value\n    )\n  \"\n>\n  Update creature\n</button>\n\n<br /><br />\n<br />\n","import { Component, OnInit } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport {\r\n  ApiService,\r\n  ICharacter,\r\n  IOrganisation,\r\n  IVoiceActor,\r\n  ISkill,\r\n  Character,\r\n  IEpisode,\r\n} from '../services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-character',\r\n  templateUrl: './character.component.html',\r\n  styleUrls: ['./character.component.css'],\r\n})\r\nexport class CharacterComponent implements OnInit {\r\n  categoryName: string = 'characters';\r\n  characterList: ICharacter[] | void;\r\n  character: ICharacter | void;\r\n  queryCharacter: ICharacter | void;\r\n\r\n  showCharactersButtonText: string = 'Show table';\r\n  showCharacters: boolean = false;\r\n\r\n  currentPage: number = 0;\r\n  maxPage: number;\r\n\r\n  voiceActor: IVoiceActor;\r\n  showVoiceActor: boolean = false;\r\n  voiceActorButtonText: string = 'Show voice actor';\r\n\r\n  organisation: IOrganisation;\r\n  showOrganisation: boolean = false;\r\n  organisationButtonText: string = 'Show affiliation';\r\n\r\n  skill: ISkill;\r\n  showSkill: boolean = false;\r\n  skillButtonText: string = 'Show ability';\r\n\r\n  episodes: IEpisode[];\r\n  showEpisodes: boolean = false;\r\n  episodesButtonText: string = 'Show episodes';\r\n\r\n  constructor(private apiSvc: ApiService) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let data = await this.apiSvc.getAll(true, this.categoryName);\r\n    if (data) {\r\n      this.maxPage = Math.ceil(data.length / 4);\r\n    }\r\n    //console.log(this.maxPage)\r\n  }\r\n\r\n  reset() {\r\n    this.voiceActor = null;\r\n    this.showVoiceActor = false;\r\n    this.voiceActorButtonText = 'Show voice actor';\r\n\r\n    this.organisation = null;\r\n    this.showOrganisation = false;\r\n    this.organisationButtonText = 'Show organisation';\r\n\r\n    this.skill = null;\r\n    this.showSkill = false;\r\n    this.skillButtonText = 'Show ability';\r\n\r\n    this.episodes = null;\r\n    this.showEpisodes = false;\r\n    this.episodesButtonText = 'Show episodes';\r\n  }\r\n\r\n  resetQuery() {\r\n    this.queryCharacter = null;\r\n  }\r\n\r\n  resetCharacter() {\r\n    this.character = null;\r\n  }\r\n\r\n  switchPage(next: boolean, sort: string, dir: string) {\r\n    if (next) {\r\n      if (this.currentPage < this.maxPage - 1) {\r\n        this.currentPage++;\r\n      }\r\n    } else {\r\n      if (this.currentPage > 0) {\r\n        this.currentPage--;\r\n      }\r\n    }\r\n    this.callApiForSort(sort, dir);\r\n  }\r\n\r\n  refactorEpisodeList(list: string) {\r\n    let nospace = list.replace(/\\s/g, '');\r\n    let splitted = nospace.split(',');\r\n    let objectArray = [];\r\n    splitted.forEach((id) => {\r\n      let obj = {\r\n        id: +id,\r\n      };\r\n      objectArray.push(obj);\r\n    });\r\n    return objectArray;\r\n    //console.log(objectArray);\r\n  }\r\n\r\n  async callApiForAll() {\r\n    if (this.showCharacters) {\r\n      this.showCharactersButtonText = 'Show table';\r\n      this.showCharacters = false;\r\n      this.characterList = null;\r\n    } else {\r\n      this.showCharactersButtonText = 'Hide table';\r\n      this.showCharacters = true;\r\n      this.characterList = await this.apiSvc.getAll(false, this.categoryName);\r\n    }\r\n  }\r\n\r\n  async callApiForQuery(name: string) {\r\n    this.resetQuery();\r\n    let res = await this.apiSvc.getByName(name, this.categoryName);\r\n    if (res) this.queryCharacter = res[0];\r\n  }\r\n\r\n  async callApiForId(id: number) {\r\n    this.character = await this.apiSvc.getById(id, this.categoryName);\r\n    this.reset();\r\n  }\r\n\r\n  async callApiForSort(sort: string, dir: string) {\r\n    this.characterList = await this.apiSvc.getAllWithSort(\r\n      this.currentPage,\r\n      sort,\r\n      dir,\r\n      this.categoryName\r\n    );\r\n  }\r\n\r\n  async callApiForVoiceActor(id: number) {\r\n    if (this.showVoiceActor) {\r\n      this.voiceActorButtonText = 'Show voice actor';\r\n      this.showVoiceActor = false;\r\n      this.voiceActor = null;\r\n    } else {\r\n      this.voiceActorButtonText = 'Hide voice actor';\r\n      this.showVoiceActor = true;\r\n      this.voiceActor = await this.apiSvc.getRelation(\r\n        id,\r\n        'voiceactor',\r\n        this.categoryName\r\n      );\r\n    }\r\n  }\r\n\r\n  async callApiForOrganisation(id: number) {\r\n    if (this.showOrganisation) {\r\n      this.organisationButtonText = 'Show affiliation';\r\n      this.showOrganisation = false;\r\n      this.organisation = null;\r\n    } else {\r\n      this.organisationButtonText = 'Hide affiliation';\r\n      this.showOrganisation = true;\r\n      this.organisation = await this.apiSvc.getRelation(\r\n        id,\r\n        'organisation',\r\n        this.categoryName\r\n      );\r\n    }\r\n  }\r\n\r\n  async callApiForSkill(id: number) {\r\n    if (this.showSkill) {\r\n      this.skillButtonText = 'Show ability';\r\n      this.showSkill = false;\r\n      this.skill = null;\r\n    } else {\r\n      this.skillButtonText = 'Hide ability';\r\n      this.showSkill = true;\r\n      this.skill = await this.apiSvc.getRelation(\r\n        id,\r\n        'skill',\r\n        this.categoryName\r\n      );\r\n    }\r\n  }\r\n\r\n  async callApiForEpisodes(id: number) {\r\n    if (this.episodes) {\r\n      this.episodesButtonText = 'Show episodes';\r\n      this.showEpisodes = false;\r\n      this.episodes = null;\r\n    } else {\r\n      this.episodesButtonText = 'Hide episodes';\r\n      this.showEpisodes = true;\r\n      this.episodes = await this.apiSvc.getRelation(\r\n        id,\r\n        'episodes',\r\n        this.categoryName\r\n      );\r\n    }\r\n  }\r\n\r\n  async callApiForNewCharacter(\r\n    name: string,\r\n    voiceActorId: number,\r\n    skillId: number,\r\n    organisationId: number,\r\n    isBender: boolean,\r\n    isAvater: boolean,\r\n    appearsInEpisode: string\r\n  ) {\r\n    let episodes = [];\r\n    if (appearsInEpisode != '') {\r\n      episodes = this.refactorEpisodeList(appearsInEpisode);\r\n    }\r\n\r\n    let newCharacter = new Character(\r\n      name,\r\n      isBender,\r\n      isAvater,\r\n      skillId,\r\n      organisationId,\r\n      voiceActorId,\r\n      episodes\r\n    );\r\n    let res = await this.apiSvc.createObject(newCharacter, this.categoryName);\r\n    if (res) {\r\n      Swal.fire(\r\n        'Succes',\r\n        'Added new character named \"' + res.name + '\" to the database.',\r\n        'success'\r\n      );\r\n    }\r\n\r\n    // refresh list of data\r\n    this.ngOnInit();\r\n  }\r\n\r\n  async callApiForDelete(id: number) {\r\n    let res = this.apiSvc.deleteObject(id, this.categoryName);\r\n    if (res) {\r\n      Swal.fire(\r\n        'Succes',\r\n        'Deleted character with ID ' + id + ' from the database.',\r\n        'success'\r\n      );\r\n    }\r\n\r\n    // refresh list of data\r\n    this.ngOnInit();\r\n  }\r\n\r\n  async callApiForUpdate(\r\n    name: string,\r\n    voiceActorId: number,\r\n    skillId: number,\r\n    organisationId: number,\r\n    isBender: boolean,\r\n    isAvatar: boolean,\r\n    id: number,\r\n    appearsInEpisode: string\r\n  ) {\r\n    let episodes = this.refactorEpisodeList(appearsInEpisode);\r\n    // FIXME: geeft nog error in API, kan niet saven\r\n    //console.log(episodes);\r\n    let updatedCharacter = new Character(\r\n      name,\r\n      isBender,\r\n      isAvatar,\r\n      skillId,\r\n      organisationId,\r\n      voiceActorId,\r\n      episodes,\r\n      id\r\n    );\r\n    let res = this.apiSvc.updateObject(updatedCharacter, this.categoryName);\r\n    if (res) {\r\n      Swal.fire('Succes', 'Updated character with ID ' + id + '.', 'success');\r\n    }\r\n  }\r\n}\r\n","<h1 class=\"title is-1\">Character Overview</h1>\r\n<h2 class=\"subtitle\">\r\n  Read, create, delete or update characters from the Avatar Universe!\r\n</h2>\r\n<br />\r\n\r\n<!-- List all characters -->\r\n<h3 class=\"title\">Look up all characters</h3>\r\n<p class=\"subtitle\">\r\n  Using the button, you can get an overview of all the characters. There will\r\n  appear more buttons in order to sort the data.\r\n</p>\r\n<button class=\"button is-primary\" (click)=\"callApiForAll()\">\r\n  {{ showCharactersButtonText }}\r\n</button>\r\n<br />\r\n<table class=\"table is-striped\" *ngIf=\"characterList\">\r\n  <thead>\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>Name</th>\r\n      <th>Voice actor</th>\r\n      <th>Ability</th>\r\n      <th>Affiliation</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let character of characterList\">\r\n      <td>{{ character.id }}</td>\r\n      <td>{{ character.name }}</td>\r\n      <td>{{ character.voicedBy.name }}</td>\r\n      <td>{{ character.ability.name }}</td>\r\n      <td>{{ character.affiliation.name }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n<div *ngIf=\"characterList\">\r\n  <p>\r\n    With these buttons you can navigate between pages of data.\r\n    <strong>Current page: </strong>{{ currentPage + 1 }}/{{ maxPage }}\r\n  </p>\r\n  <button\r\n    class=\"button is-light\"\r\n    (click)=\"switchPage(false, sort.value, dir.value)\"\r\n  >\r\n    << Previous page\r\n  </button>\r\n  <button\r\n    class=\"button is-light\"\r\n    (click)=\"switchPage(true, sort.value, dir.value)\"\r\n  >\r\n    Next page >>\r\n  </button>\r\n  <br /><br />\r\n  <p>With this choice field you can sort the data.</p>\r\n  <div class=\"select\">\r\n    <select #sort>\r\n      <option value=\"id\">Id</option>\r\n      <option value=\"name\">Name</option>\r\n      <option value=\"vaname\">Voice actor name</option>\r\n    </select>\r\n  </div>\r\n  <div class=\"select\">\r\n    <select #dir>\r\n      <option value=\"asc\">Ascending</option>\r\n      <option value=\"des\">Descending</option>\r\n    </select>\r\n  </div>\r\n  <button\r\n    class=\"button is-light\"\r\n    (click)=\"callApiForSort(sort.value, dir.value)\"\r\n  >\r\n    Sort\r\n  </button>\r\n</div>\r\n<br />\r\n\r\n<h3 class=\"title\">Look up more information for a specific character</h3>\r\n<!-- Get character by name -->\r\n<p class=\"subtitle\">\r\n  Here you can search a character by its name in order to get its ID. With the\r\n  ID, you can look up more detailed information.\r\n</p>\r\n<div class=\"field has-addons\">\r\n  <div class=\"control\">\r\n    <input\r\n      #nameQuery\r\n      class=\"input\"\r\n      type=\"text\"\r\n      placeholder=\"Give a valid name\"\r\n    />\r\n  </div>\r\n  <div class=\"control\">\r\n    <a class=\"button is-primary\" (click)=\"callApiForQuery(nameQuery.value)\">\r\n      Search\r\n    </a>\r\n  </div>\r\n</div>\r\n\r\n<table class=\"table is-bordered is-striped\" *ngIf=\"queryCharacter\">\r\n  <thead>\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>Name</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>{{ queryCharacter.id }}</td>\r\n      <td>{{ queryCharacter.name }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<!-- Get character by ID -->\r\n<p class=\"subtitle\">\r\n  Here you can search a character by its ID to get more information and also\r\n  look up its relations.\r\n</p>\r\n\r\n<div class=\"field has-addons\">\r\n  <div class=\"control\">\r\n    <input #id class=\"input\" type=\"number\" placeholder=\"Give a valid ID\" />\r\n  </div>\r\n  <div class=\"control\">\r\n    <a class=\"button is-primary\" (click)=\"callApiForId(id.value)\"> Search </a>\r\n  </div>\r\n</div>\r\n\r\n<table class=\"table is-bordered is-striped\" *ngIf=\"character\">\r\n  <thead>\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>Name</th>\r\n      <th>Voice actor</th>\r\n      <th>Ability</th>\r\n      <th>Affiliation</th>\r\n      <th>IsBender</th>\r\n      <th>IsAvatar</th>\r\n      <th>Appears in episodes</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>{{ character.id }}</td>\r\n      <td>{{ character.name }}</td>\r\n      <td>{{ character.voicedBy.name }}</td>\r\n      <td>{{ character.ability.name }}</td>\r\n      <td>{{ character.affiliation.name }}</td>\r\n      <td>{{ character.isBender }}</td>\r\n      <td>{{ character.isAvatar }}</td>\r\n      <table class=\"table\" *ngIf=\"character.appearsInEpisode.length > 0\">\r\n        <thead>\r\n          <th>Title</th>\r\n          <th>Airdate</th>\r\n          <th>Number</th>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let episode of character.appearsInEpisode\">\r\n            <td>{{ episode.title }}</td>\r\n            <td>{{ episode.airDate }}</td>\r\n            <td>{{ episode.overallNumber }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<!-- Relation 1: voice actor -->\r\n<button\r\n  class=\"button is-light\"\r\n  *ngIf=\"character\"\r\n  (click)=\"callApiForVoiceActor(id.value)\"\r\n>\r\n  {{ voiceActorButtonText }}\r\n</button>\r\n<br *ngIf=\"character\" />\r\n<table class=\"table is-bordered is-striped\" *ngIf=\"voiceActor\">\r\n  <thead>\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>Name</th>\r\n      <th>Birthdate</th>\r\n      <th>Link</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>{{ voiceActor.id }}</td>\r\n      <td>{{ voiceActor.name }}</td>\r\n      <td>{{ voiceActor.birthDate }}</td>\r\n      <td>\r\n        <a href=\"{{ voiceActor.link }}\">{{ voiceActor.link }}</a>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<!-- Relation 2: affiliation -->\r\n<button\r\n  class=\"button is-light\"\r\n  *ngIf=\"character\"\r\n  (click)=\"callApiForOrganisation(id.value)\"\r\n>\r\n  {{ organisationButtonText }}\r\n</button>\r\n<br *ngIf=\"character\" />\r\n<table class=\"table is-bordered is-striped\" *ngIf=\"organisation\">\r\n  <thead>\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>Name</th>\r\n      <th>Description</th>\r\n      <th>Emblem</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>{{ organisation.id }}</td>\r\n      <td>{{ organisation.name }}</td>\r\n      <td>{{ organisation.description }}</td>\r\n      <td>\r\n        <img src=\"{{ organisation.emblem }}\" alt=\"emblem image\" width=\"200\" />\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<!-- Relation 3: skill -->\r\n<button\r\n  class=\"button is-light\"\r\n  *ngIf=\"character\"\r\n  (click)=\"callApiForSkill(id.value)\"\r\n>\r\n  {{ skillButtonText }}\r\n</button>\r\n<br *ngIf=\"character\" />\r\n<table class=\"table is-bordered is-striped\" *ngIf=\"skill\">\r\n  <thead>\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>Name</th>\r\n      <th>Description</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>{{ skill.id }}</td>\r\n      <td>{{ skill.name }}</td>\r\n      <td>{{ skill.description }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<!-- Relation 4: episodes -->\r\n<button\r\n  class=\"button is-light\"\r\n  *ngIf=\"character\"\r\n  (click)=\"callApiForEpisodes(id.value)\"\r\n>\r\n  {{ episodesButtonText }}\r\n</button>\r\n<br *ngIf=\"character\" />\r\n<table class=\"table is-bordered is-striped\" *ngIf=\"episodes\">\r\n  <thead>\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>Title</th>\r\n      <th>Airdate</th>\r\n      <th>Description</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let episode of episodes\">\r\n      <td>{{ episode.id }}</td>\r\n      <td>{{ episode.title }}</td>\r\n      <td>{{ episode.airDate }}</td>\r\n      <td>{{ episode.description }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n<br />\r\n\r\n<!-- CRUD -->\r\n<!-- Create new character -->\r\n<h3 class=\"title\">Add new characters</h3>\r\n<p class=\"subtitle\">Here you can add a new character to the database.</p>\r\n\r\n<div class=\"field\">\r\n  <label class=\"label\">Name</label>\r\n  <div class=\"control\" style=\"width: 25%\">\r\n    <input #name class=\"input\" type=\"text\" placeholder=\"Give a name\" />\r\n  </div>\r\n  <p class=\"help\">This is a required field</p>\r\n</div>\r\n\r\n<div class=\"field\">\r\n  <label class=\"label\">Voice actor</label>\r\n  <div class=\"control\" style=\"width: 25%\">\r\n    <input\r\n      #voiceActorId\r\n      class=\"input\"\r\n      type=\"number\"\r\n      placeholder=\"Give the ID of the voice actor\"\r\n    />\r\n  </div>\r\n  <p class=\"help\">This is a required field</p>\r\n</div>\r\n\r\n<div class=\"field\">\r\n  <label class=\"label\">Ability</label>\r\n  <div class=\"control\" style=\"width: 25%\">\r\n    <input\r\n      #abilityId\r\n      class=\"input\"\r\n      type=\"number\"\r\n      placeholder=\"Give the ID of the ability\"\r\n    />\r\n  </div>\r\n  <p class=\"help\">This is a required field</p>\r\n</div>\r\n\r\n<div class=\"field\">\r\n  <label class=\"label\">Affiliation</label>\r\n  <div class=\"control\" style=\"width: 25%\">\r\n    <input\r\n      #affiliationId\r\n      class=\"input\"\r\n      type=\"number\"\r\n      placeholder=\"Give the ID of the affiliation\"\r\n    />\r\n  </div>\r\n  <p class=\"help\">This is a required field</p>\r\n</div>\r\n\r\n<div class=\"field\">\r\n  <label class=\"label\">Appears in episodes</label>\r\n  <div class=\"control\" style=\"width: 25%\">\r\n    <input\r\n      #episodeList\r\n      class=\"input\"\r\n      type=\"string\"\r\n      placeholder=\"Give the ID of the episodes, seperated by commas\"\r\n    />\r\n  </div>\r\n  <p class=\"help\">Example: 1,2,4</p>\r\n</div>\r\n\r\n<label class=\"checkbox\">\r\n  <input #bender type=\"checkbox\" />\r\n  Character is/was a bender\r\n</label>\r\n<br />\r\n\r\n<label class=\"checkbox\">\r\n  <input #avatar type=\"checkbox\" />\r\n  Character is/was an avatar\r\n</label>\r\n<br />\r\n\r\n<button\r\n  class=\"button is-primary\"\r\n  (click)=\"\r\n    callApiForNewCharacter(\r\n      name.value,\r\n      voiceActorId.value,\r\n      abilityId.value,\r\n      affiliationId.value,\r\n      bender.checked,\r\n      avatar.checked,\r\n      episodeList.value\r\n    )\r\n  \"\r\n>\r\n  Add new character\r\n</button>\r\n<br /><br /><br />\r\n\r\n<!-- Delete character -->\r\n<h3 class=\"title\">Delete characters</h3>\r\n<p class=\"subtitle\">\r\n  Here you can delete characters from the database. Be careful! If you delete\r\n  data, it will be lost forever. To use this feature, you must be\r\n  <a href=\"http://localhost:4200/login\">logged in</a>.\r\n</p>\r\n\r\n<div class=\"field has-addons\">\r\n  <div class=\"control\">\r\n    <input\r\n      #idToDelete\r\n      class=\"input\"\r\n      type=\"number\"\r\n      placeholder=\"Give a valid ID\"\r\n    />\r\n  </div>\r\n  <div class=\"control\">\r\n    <a class=\"button is-danger\" (click)=\"callApiForDelete(idToDelete.value)\">\r\n      Delete\r\n    </a>\r\n  </div>\r\n</div>\r\n<br />\r\n\r\n<!-- Update character -->\r\n<h3 class=\"title\">Update existing characters</h3>\r\n<p class=\"subtitle\">\r\n  Here you can update existing characters with new values. You need to know the\r\n  ID of the character you want to update. To use this feature, you must be\r\n  <a href=\"http://localhost:4200/login\">logged in</a>.\r\n</p>\r\n\r\n<div class=\"field\">\r\n  <label class=\"label\">ID</label>\r\n  <div class=\"control\" style=\"width: 25%\">\r\n    <input #updateId class=\"input\" type=\"number\" placeholder=\"Give an ID\" />\r\n  </div>\r\n  <p class=\"help\">This is a required field</p>\r\n</div>\r\n\r\n<div class=\"field\">\r\n  <label class=\"label\">Name</label>\r\n  <div class=\"control\" style=\"width: 25%\">\r\n    <input #updateName class=\"input\" type=\"text\" placeholder=\"Give a name\" />\r\n  </div>\r\n  <p class=\"help\">This is a required field</p>\r\n</div>\r\n\r\n<div class=\"field\">\r\n  <label class=\"label\">Voice actor</label>\r\n  <div class=\"control\" style=\"width: 25%\">\r\n    <input\r\n      #updateVoiceActorId\r\n      class=\"input\"\r\n      type=\"number\"\r\n      placeholder=\"Give the ID of the voice actor\"\r\n    />\r\n  </div>\r\n  <p class=\"help\">This is a required field</p>\r\n</div>\r\n\r\n<div class=\"field\">\r\n  <label class=\"label\">Ability</label>\r\n  <div class=\"control\" style=\"width: 25%\">\r\n    <input\r\n      #updateAbilityId\r\n      class=\"input\"\r\n      type=\"number\"\r\n      placeholder=\"Give the ID of the ability\"\r\n    />\r\n  </div>\r\n  <p class=\"help\">This is a required field</p>\r\n</div>\r\n\r\n<div class=\"field\">\r\n  <label class=\"label\">Affiliation</label>\r\n  <div class=\"control\" style=\"width: 25%\">\r\n    <input\r\n      #updateAffiliationId\r\n      class=\"input\"\r\n      type=\"number\"\r\n      placeholder=\"Give the ID of the affiliation\"\r\n    />\r\n  </div>\r\n  <p class=\"help\">This is a required field</p>\r\n</div>\r\n\r\n<div class=\"field\">\r\n  <label class=\"label\">Appears in episodes</label>\r\n  <div class=\"control\" style=\"width: 25%\">\r\n    <input\r\n      #updateEpisodeList\r\n      class=\"input\"\r\n      type=\"string\"\r\n      placeholder=\"Give the ID of the episodes, seperated by commas\"\r\n    />\r\n  </div>\r\n  <p class=\"help\">Example: 1,2,4</p>\r\n</div>\r\n\r\n<label class=\"checkbox\">\r\n  <input #updateBender type=\"checkbox\" />\r\n  Character is/was a bender\r\n</label>\r\n<br />\r\n\r\n<label class=\"checkbox\">\r\n  <input #updateAvatar type=\"checkbox\" />\r\n  Character is/was an avatar </label\r\n><br />\r\n\r\n<button\r\n  class=\"button is-primary\"\r\n  (click)=\"\r\n    callApiForUpdate(\r\n      updateName.value,\r\n      updateVoiceActorId.value,\r\n      updateAbilityId.value,\r\n      updateAffiliationId.value,\r\n      updateBender.checked,\r\n      updateAvatar.checked,\r\n      updateId.value,\r\n      updateEpisodeList.value\r\n    )\r\n  \"\r\n>\r\n  Update character\r\n</button>\r\n\r\n<br /><br />\r\n<br />\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CharacterComponent } from './character/character.component';\r\nimport { CreatureComponent } from './creature/creature.component';\r\nimport { EpisodeComponent } from './episode/episode.component';\r\nimport { NotfoundComponent } from './notfound/notfound.component';\r\nimport { ExternalComponent } from './external/external.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    CharacterComponent,\r\n    CreatureComponent,\r\n    EpisodeComponent,\r\n    NotfoundComponent,\r\n    ExternalComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot([\r\n      {\r\n        path: \"characters\",\r\n        component: CharacterComponent\r\n      },\r\n      {\r\n        path: \"creatures\",\r\n        component: CreatureComponent\r\n      },\r\n      {\r\n        path: \"episodes\",\r\n        component: EpisodeComponent\r\n      },\r\n      {\r\n        path: \"external\",\r\n        component: ExternalComponent\r\n      },\r\n      {\r\n        path: \"login\",\r\n        component: LoginComponent\r\n      },\r\n      {\r\n        path: \"\", redirectTo: \"characters\", pathMatch: \"full\"\r\n      },\r\n      {\r\n        path: \"**\", component: NotfoundComponent\r\n      }\r\n    ])\r\n\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"navbar-start\">\r\n  <a class=\"button\" [routerLink]=\"['characters']\" [routerLinkActive]=\"['is-info']\"> Characters </a>\r\n\r\n  <a class=\"button\" [routerLink]=\"['creatures']\" [routerLinkActive]=\"['is-info']\"> Creatures </a>\r\n\r\n  <a class=\"button\" [routerLink]=\"['external']\" [routerLinkActive]=\"['is-info']\"> External API </a>\r\n\r\n  <a class=\"button\" [routerLink]=\"['login']\" [routerLinkActive]=\"['is-info']\"> Login </a>\r\n</div>\r\n<br />\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport Swal from 'sweetalert2';\r\nimport { LoginService } from '../services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  // Bron: https://www.itsolutionstuff.com/post/angular-11-google-oauth-social-login-exampleexample.html\r\n\r\n  auth2: any;\r\n\r\n  @ViewChild('loginRef', { static: true }) loginElement: ElementRef;\r\n\r\n  constructor(private loginSvc: LoginService) {}\r\n\r\n  ngOnInit() {\r\n    this.googleSDK();\r\n  }\r\n\r\n  prepareLoginButton() {\r\n    this.auth2.attachClickHandler(\r\n      this.loginElement.nativeElement,\r\n      {},\r\n      (googleUser) => {\r\n        let profile = googleUser.getBasicProfile();\r\n        let token = googleUser.getAuthResponse().id_token;\r\n        console.log('Token || ' + token);\r\n        console.log('ID: ' + profile.getId());\r\n        console.log('Name: ' + profile.getName());\r\n        console.log('Image URL: ' + profile.getImageUrl());\r\n        console.log('Email: ' + profile.getEmail());\r\n\r\n        this.loginSvc.jwtToken = token;\r\n        Swal.fire('Succes!', 'You are now logged in.', 'success');\r\n      },\r\n      (error) => {\r\n        alert(JSON.stringify(error, undefined, 2));\r\n      }\r\n    );\r\n  }\r\n  googleSDK() {\r\n    window['googleSDKLoaded'] = () => {\r\n      window['gapi'].load('auth2', () => {\r\n        this.auth2 = window['gapi'].auth2.init({\r\n          client_id:\r\n            '136990248878-ne0h4skpitopua95ldsjkpfo2up1slvo.apps.googleusercontent.com',\r\n          cookiepolicy: 'single_host_origin',\r\n          scope: 'profile',\r\n        });\r\n        this.prepareLoginButton();\r\n      });\r\n    };\r\n\r\n    (function (d, s, id) {\r\n      var js,\r\n        fjs = d.getElementsByTagName(s)[0];\r\n      if (d.getElementById(id)) {\r\n        return;\r\n      }\r\n      js = d.createElement(s);\r\n      js.id = id;\r\n      js.src = 'https://apis.google.com/js/platform.js?onload=googleSDKLoaded';\r\n      fjs.parentNode.insertBefore(js, fjs);\r\n    })(document, 'script', 'google-jssdk');\r\n  }\r\n}\r\n","<form action=\"/google-login\" method=\"GET\">\r\n  <div style=\"width: 100%; text-align: center\">\r\n    <input type=\"submit\" style=\"margin-top: 20%\" value=\"Login\" #loginRef /> with\r\n    Google\r\n    <i class=\"fab fa-google\"></i>\r\n  </div>\r\n</form>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}